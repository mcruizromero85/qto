// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.qto.web.controllers;

import com.qto.web.controllers.ApplicationConversionServiceFactoryBean;
import com.qto.web.domain.Enrollment;
import com.qto.web.domain.Gamer;
import com.qto.web.domain.Tournament;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Enrollment, String> ApplicationConversionServiceFactoryBean.getEnrollmentToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.qto.web.domain.Enrollment, java.lang.String>() {
            public String convert(Enrollment enrollment) {
                return new StringBuilder().append(enrollment.getRegistrationDate()).toString();
            }
        };
    }
    
    public Converter<Long, Enrollment> ApplicationConversionServiceFactoryBean.getIdToEnrollmentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.qto.web.domain.Enrollment>() {
            public com.qto.web.domain.Enrollment convert(java.lang.Long id) {
                return Enrollment.findEnrollment(id);
            }
        };
    }
    
    public Converter<String, Enrollment> ApplicationConversionServiceFactoryBean.getStringToEnrollmentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.qto.web.domain.Enrollment>() {
            public com.qto.web.domain.Enrollment convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Enrollment.class);
            }
        };
    }
    
    public Converter<Gamer, String> ApplicationConversionServiceFactoryBean.getGamerToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.qto.web.domain.Gamer, java.lang.String>() {
            public String convert(Gamer gamer) {
                return new StringBuilder().append(gamer.getNick()).append(' ').append(gamer.getEmail()).toString();
            }
        };
    }
    
    public Converter<Long, Gamer> ApplicationConversionServiceFactoryBean.getIdToGamerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.qto.web.domain.Gamer>() {
            public com.qto.web.domain.Gamer convert(java.lang.Long id) {
                return Gamer.findGamer(id);
            }
        };
    }
    
    public Converter<String, Gamer> ApplicationConversionServiceFactoryBean.getStringToGamerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.qto.web.domain.Gamer>() {
            public com.qto.web.domain.Gamer convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Gamer.class);
            }
        };
    }
    
    public Converter<Tournament, String> ApplicationConversionServiceFactoryBean.getTournamentToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.qto.web.domain.Tournament, java.lang.String>() {
            public String convert(Tournament tournament) {
                return new StringBuilder().append(tournament.getTitle()).append(' ').append(tournament.getDescription()).append(' ').append(tournament.getUrlLogo()).append(' ').append(tournament.getConfirm()).toString();
            }
        };
    }
    
    public Converter<Long, Tournament> ApplicationConversionServiceFactoryBean.getIdToTournamentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.qto.web.domain.Tournament>() {
            public com.qto.web.domain.Tournament convert(java.lang.Long id) {
                return Tournament.findTournament(id);
            }
        };
    }
    
    public Converter<String, Tournament> ApplicationConversionServiceFactoryBean.getStringToTournamentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.qto.web.domain.Tournament>() {
            public com.qto.web.domain.Tournament convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Tournament.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getEnrollmentToStringConverter());
        registry.addConverter(getIdToEnrollmentConverter());
        registry.addConverter(getStringToEnrollmentConverter());
        registry.addConverter(getGamerToStringConverter());
        registry.addConverter(getIdToGamerConverter());
        registry.addConverter(getStringToGamerConverter());
        registry.addConverter(getTournamentToStringConverter());
        registry.addConverter(getIdToTournamentConverter());
        registry.addConverter(getStringToTournamentConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
